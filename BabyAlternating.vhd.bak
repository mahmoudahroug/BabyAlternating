library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity BabyAlternating is
	port( clk, sensor : in std_logic;
			alarm, motorLeft, moterRight  : out std_logic) ;
end Baby;

architecture arch of BabyAlternating is
Signal timer: INTEGER range 0 to 200000999 := 0;
Signal onfor: Integer range 0 to 200000999 := 50000000;
Signal alternate: std_logic := 0;
BEGIN
	process(clk, sensor, timer)
	BEGIN
		if clk'event and clk='1' then
			timer <= timer +1;
		end if;
		if sensor='0' then
			alarm <= '0';
			alternate <= '0';
		end if;
		if timer > 200000000 then
			alarm <= '1';
			alternate <= '1';
			timer <= 0;
		end if;
	END process;
	process(alternate, timer)
	BEGIN
		if alternate = '0' then
			motorLeft<= '0';
			motorRight <= '0';
		else if timer < onfor then
			motorLeft <= '1';
			motorRight <= '0';
		else if timer < onfor*2 then
			motorLeft <= '0';
			motorRight <= '1';
		else if timer < onfor*3 then
			motorLeft <= '1';
			motorRight <= '0';
		else
			motorLeft <= '0';
			motorRight <= '1';
		end if;
			
	END process;
END arch;